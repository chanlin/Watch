package com.jajale.watch.fragment;import android.content.Intent;import android.os.Bundle;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.GridView;import com.jajale.watch.AppConstants;import com.jajale.watch.R;import com.jajale.watch.activity.XMLYAlbumActivity;import com.jajale.watch.adapter.ChildTagsGvAdpter;import com.jajale.watch.entity.TagEnum;import com.jajale.watch.utils.CMethod;import com.jajale.watch.utils.L;import com.jajale.watch.utils.LoadingDialog;import com.jajale.watch.utils.T;import com.ximalaya.ting.android.opensdk.constants.DTransferConstants;import com.ximalaya.ting.android.opensdk.datatrasfer.CommonRequest;import com.ximalaya.ting.android.opensdk.datatrasfer.IDataCallBack;import com.ximalaya.ting.android.opensdk.model.album.Album;import com.ximalaya.ting.android.opensdk.model.tag.Tag;import com.ximalaya.ting.android.opensdk.model.tag.TagList;import java.util.ArrayList;import java.util.HashMap;import java.util.List;/** * Created by Sunzhigang on 2016/3/10. */public class XiMaLaYaFragment extends Fragment {    HashMap<String, String> map;    private GridView gridView;    ChildTagsGvAdpter childTagsGvAdpter;    private CommonRequest mXimalaya;    List<Tag> cTagList;    private String mCurrentAlbumName;    private int mCurrentPagerNum = 1;    List<Album> albumList;    LoadingDialog loadingDialog;    public static XiMaLaYaFragment newInstance() {        XiMaLaYaFragment fragment = new XiMaLaYaFragment();        return fragment;    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (loadingDialog == null) {            loadingDialog = new LoadingDialog(getActivity());        }        map = new HashMap<String, String>();    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.fragment_ximalaya, null);        view.setFocusable(true);        view.setFocusableInTouchMode(true);        if (childTagsGvAdpter == null) {            childTagsGvAdpter = new ChildTagsGvAdpter(getActivity());        }        initView(view);        mXimalaya = CommonRequest.getInstanse();        mXimalaya.init(getActivity(), AppConstants.mAppSecret);        mXimalaya.setDefaultPagesize(50);        initData();        return view;    }    private void initData() {        initChildModeData();    }    private void initView(View view) {        gridView = (GridView) view.findViewById(R.id.child_tags_gl);        gridView.setAdapter(childTagsGvAdpter);        childTagsGvAdpter.setOnTagClickListenr(new ChildTagsGvAdpter.OnTagClickListenr() {            @Override            public void OnTagClick(String tagName) {                //判断网络                if (!CMethod.isNetWorkEnable(getActivity())) {                    T.s(getActivity().getString(R.string.check_network_connection));                    return;                }                if (CMethod.isFastDoubleClick()) {                    return;                }                mCurrentAlbumName = tagName;                if (albumList != null) {                    albumList.clear();                }                getAlbums(tagName, mCurrentPagerNum);            }        });    }    /**     * 获取少儿分类的专辑     */    private void getAlbums(String tagName, final int pageNums) {         if (tagName.equals(TagEnum.少儿英语.toString())) {            tagName = TagEnum.英文磨耳朵.toString();        } else if (tagName.equals(TagEnum.知识启蒙.toString())) {            tagName = TagEnum.国学启蒙.toString();        } else if (tagName.equals(TagEnum.亲子教育.toString())) {            tagName = TagEnum.亲子学堂.toString();        }        Intent intent = new Intent(getActivity(), XMLYAlbumActivity.class);        intent.putExtra("tag_name", tagName);        intent.putExtra("page", pageNums + "");        getActivity().startActivity(intent);    }    @Override    public void onResume() {        super.onResume();    }    @Override    public void onStop() {        super.onStop();    }    @Override    public void onPause() {        super.onPause();    }    /**     * 初始化少儿频道，获取频道下的分类     */    private void initChildModeData() {        if (!loadingDialog.isShowing()) {            loadingDialog.show();        }        map.clear();        map.put(DTransferConstants.CATEGORY_ID, "6");        map.put(DTransferConstants.TYPE, "0");        CommonRequest.getTags(map, new IDataCallBack<TagList>() {            @Override            public void onSuccess(TagList object) {                if (object != null) {                    processChildCategory(object.getTagList());                    if (loadingDialog.isShowing()) {                        loadingDialog.dismiss();                    }                }            }            @Override            public void onError(int code, String message) {                L.i("guokm", "getTagErr错误代码:" + code + "错误消息:" + message);                if (loadingDialog.isShowing()) {                    loadingDialog.dismiss();                }                T.s(getActivity().getString(R.string.net_poor));            }        });    }    /**     * 整理少儿分类，过滤不需要的分类     */    private void processChildCategory(List<Tag> tagList) {        if (tagList == null) {            return;        }        cTagList = new ArrayList<Tag>();        for (Tag tag : tagList) {            L.e("guokm", "121212----:::" + tag.getTagName().toString());            if (tag.getTagName().equals(TagEnum.新妈听听看.toString())                    || tag.getTagName().equals(TagEnum.口袋故事集.toString())                    || tag.getTagName().equals(TagEnum.科普涨知识.toString())                    || tag.getTagName().equals(TagEnum.中小学必备.toString())                    || tag.getTagName().equals(TagEnum.爱听故事.toString())) {                continue;            } else {                cTagList.add(tag);            }        }        childTagsGvAdpter.setTagData(cTagList);    }}